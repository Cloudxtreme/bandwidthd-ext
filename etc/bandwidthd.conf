####################################################
# Bandwidthd.conf
# 
# Commented out options are here to provide
# documentation and represent defaults

# Subnets to collect statistics on.  Traffic that 
# matches none of these subnets will be ignored.
# Syntax is either IP Subnet Mask or CIDR
subnet 10.0.0.0 255.0.0.0
subnet 192.168.0.0/16
subnet 172.16.0.0/12

# Device to listen on
# Bandwidthd listens on the first device it detects
# by default.  Run "bandwidthd -l" for a list of 
# devices. 
#dev "eth0"

###################################################
# Options that don't usually get changed

# An interval is 2.5 minutes, this is how many 
# intervals to skip before doing a graphing run
#skip_intervals 0

# Graph cutoff is how many k must be transfered by an
# ip before we bother to graph it
#graph_cutoff 1024

# Put interface in promiscuous mode to score to traffic
# that may not be routing through the host machine.
#promiscuous true

# Log data to cdf file htdocs/log.cdf
#output_cdf false

# Set the cdf log output directory
#log_dir "/usr/local/var/bandwidthd"

# Read back the cdf file on startup
#recover_cdf false

# Libpcap format filter string used to control what bandwidthd see's
# Please always include "ip" in the string to avoid strange problems
#filter "ip"

# Draw Graphs - This default to true to graph the traffic bandwidthd is recording
# Usually set this to false if you only want cdf output or
# you are using the database output option.  Bandwidthd will use very little
# ram and cpu if this is set to false.
#graph true

# Set META REFRESH for static pages in seconds(default 150, use 0 to disable).
#meta_refresh 150

# Set the static html output directory
#htdocs_dir "/usr/local/var/bandwidthd/htdocs"

# Where to write pid
#pidfile "/var/run/bandwidthd.pid"

####################################################
# Database options
# You should probably change both output_cdf and graph to false
# if you are using database.

# Database type, possible values, pgsql, mysql or none
#output_database none

# Arbitrary sensor name, I recommend the sensors fully qualified domain
# name
#sensor_id "sensor1"

# PostgreSQL
# Standard postgres connect string, just like php, see postgres docs for
# details
#pgsql_connect_string "user = someuser dbname = mydb host = databaseserver.com"

# MySQL
#mysql_host "localhost"
#mysql_user "bandwidthd"
#mysql_pass "password"
#mysql_dbname "bandwidthd"
# Port 0 means, that the default port is used
#mysql_port 0
